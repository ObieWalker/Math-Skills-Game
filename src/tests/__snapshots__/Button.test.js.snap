// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component renders component successfully 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    acceptAnswer={[MockFunction]}
    answerIsCorrect={true}
    checkAnswer={[MockFunction]}
    redraw={[MockFunction]}
    redraws={true}
    selectedNumbers={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="btn btn-success"
          onClick={[MockFunction]}
        >
          <i
            className="fa fa-check"
          />
        </button>,
        <br />,
        <br />,
        <button
          className="btn btn-warning btn-sm"
          disabled={false}
          onClick={[MockFunction]}
        >
          <i
            className="fa fa-refresh"
          >
            reload 
            true
          </i>
        </button>,
      ],
      "className": "col-2",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fa fa-check"
          />,
          "className": "btn btn-success",
          "onClick": [MockFunction],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fa fa-check",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fa fa-refresh"
          >
            reload 
            true
          </i>,
          "className": "btn btn-warning btn-sm",
          "disabled": false,
          "onClick": [MockFunction],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "reload ",
              true,
            ],
            "className": "fa fa-refresh",
          },
          "ref": null,
          "rendered": Array [
            "reload ",
            true,
          ],
          "type": "i",
        },
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="btn btn-success"
            onClick={[MockFunction]}
          >
            <i
              className="fa fa-check"
            />
          </button>,
          <br />,
          <br />,
          <button
            className="btn btn-warning btn-sm"
            disabled={false}
            onClick={[MockFunction]}
          >
            <i
              className="fa fa-refresh"
            >
              reload 
              true
            </i>
          </button>,
        ],
        "className": "col-2",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa fa-check"
            />,
            "className": "btn btn-success",
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-check",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa fa-refresh"
            >
              reload 
              true
            </i>,
            "className": "btn btn-warning btn-sm",
            "disabled": false,
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "reload ",
                true,
              ],
              "className": "fa fa-refresh",
            },
            "ref": null,
            "rendered": Array [
              "reload ",
              true,
            ],
            "type": "i",
          },
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
